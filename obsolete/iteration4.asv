function [T] = iteration3(Tx,M,iinvA,ite)
    Rx = Tx(1:3,1:3);
    tx = Tx(1:3,4);
    A = pageinv(iinvA);
    zeros = [0;0;0];
    delta_x = [0;0;0;0;0;0];
    [numRows, numCols] = size(M);
    for k = 1:ite
        g = [];
        J = [];
        z1 = [];
        z2 = [];
        z3 = [];
        z4 = [];
        for i=1:numRows-1
            for j = i+1 : numRows
                Ai = A(:,:,i);
                alphai = A(1:3,1,i);
                betai = A(1:3,2,i);
                gammai = A(1:3,3,i);
                deltai = A(1:3,4,i);
                Aj = A(:,:,j);
                alphaj = A(1:3,1,j);
                betaj = A(1:3,2,j);
                gammaj = A(1:3,3,j);
                deltaj = A(1:3,4,j);
                calc_g = M(i,:)*Tx*Ai-M(j,:)*Tx*Aj;
                z1 = [z1,calc_g(1)];
                z2 = [z2,calc_g(2)];
                z3 = [z3,calc_g(3)];
                z4 = [z1,calc_g(4)];
                g = [g,calc_g];
                calc_J = [M(i,:)*dong(Tx,alphai)-M(j,:)*dong(Tx,alphaj)+M(i,:)*dong(Tx,zeros)-M(j,:)*dong(Tx,zeros);
                    M(i,:)*dong(Tx,betai)-M(j,:)*dong(Tx,betaj)+M(i,:)*dong(Tx,zeros)-M(j,:)*dong(Tx,zeros);
                    M(i,:)*dong(Tx,gammai)-M(j,:)*dong(Tx,gammaj)+M(i,:)*dong(Tx,zeros)-M(j,:)*dong(Tx,zeros);
                    M(i,:)*dong(Tx,deltai)-M(j,:)*dong(Tx,deltaj)+M(i,:)*dong(Tx,zeros)-M(j,:)*dong(Tx,zeros)];
                J = [J;calc_J];
            end
        end
        std(g)
        mean(g)
        g = g';
        delta_x = 0.9*delta_x - 0.1*inv(J'*J)*J'*g;
        Tx = [lie_to_rotate(delta_x(4:6,1)*0.1),delta_x(1:3,1);0,0,0,1]*Tx;
    end
    T = Tx;
end

function [S] = skew(p)
    a1 = p(1,1);
    a2 = p(2,1);
    a3 = p(3,1);
    S = [0,-a3,a2;a3,0,-a1;-a2,a1,0];
end

function [R] = lie_to_rotate(p)
    theta = norm(p);
    a = p/norm(p);
    R = cos(theta)*eye(3)+(1-cos(theta))*a*a'+sin(theta)*skew(a);
end

function [se3] = dong(T,p)
    se3 = [eye(3),-skew(T(1:3,1:3)*p+T(1:3,4));0,0,0,0,0,0];
end
    